/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */


declare global {
  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;
  }
}



import {
  FtIcon as FtIcon
} from './components/ft-icon/ft-icon';

declare global {
  interface HTMLFtIconElement extends FtIcon, HTMLStencilElement {
  }
  var HTMLFtIconElement: {
    prototype: HTMLFtIconElement;
    new (): HTMLFtIconElement;
  };
  interface HTMLElementTagNameMap {
    "ft-icon": HTMLFtIconElement;
  }
  interface ElementTagNameMap {
    "ft-icon": HTMLFtIconElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "ft-icon": JSXElements.FtIconAttributes;
    }
  }
  namespace JSXElements {
    export interface FtIconAttributes extends HTMLAttributes {
      ariaLabel?: string;
      name?: string;
      size?: string;
    }
  }
}


import {
  LazyImg as LazyImg
} from './components/lazy-img/lazy-img';

declare global {
  interface HTMLLazyImgElement extends LazyImg, HTMLStencilElement {
  }
  var HTMLLazyImgElement: {
    prototype: HTMLLazyImgElement;
    new (): HTMLLazyImgElement;
  };
  interface HTMLElementTagNameMap {
    "lazy-img": HTMLLazyImgElement;
  }
  interface ElementTagNameMap {
    "lazy-img": HTMLLazyImgElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "lazy-img": JSXElements.LazyImgAttributes;
    }
  }
  namespace JSXElements {
    export interface LazyImgAttributes extends HTMLAttributes {
      alt?: string;
      src?: string;
    }
  }
}


import {
  SpApp as SpApp
} from './components/sp-app/sp-app';

declare global {
  interface HTMLSpAppElement extends SpApp, HTMLStencilElement {
  }
  var HTMLSpAppElement: {
    prototype: HTMLSpAppElement;
    new (): HTMLSpAppElement;
  };
  interface HTMLElementTagNameMap {
    "sp-app": HTMLSpAppElement;
  }
  interface ElementTagNameMap {
    "sp-app": HTMLSpAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "sp-app": JSXElements.SpAppAttributes;
    }
  }
  namespace JSXElements {
    export interface SpAppAttributes extends HTMLAttributes {
      brandImage?: string;
      brandLink?: string;
      brandName?: string;
      menu?: any;
      title?: string;
    }
  }
}


import {
  SpNavigation as SpNavigation
} from './components/sp-navigation/sp-navigation';

declare global {
  interface HTMLSpNavigationElement extends SpNavigation, HTMLStencilElement {
  }
  var HTMLSpNavigationElement: {
    prototype: HTMLSpNavigationElement;
    new (): HTMLSpNavigationElement;
  };
  interface HTMLElementTagNameMap {
    "sp-navigation": HTMLSpNavigationElement;
  }
  interface ElementTagNameMap {
    "sp-navigation": HTMLSpNavigationElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "sp-navigation": JSXElements.SpNavigationAttributes;
    }
  }
  namespace JSXElements {
    export interface SpNavigationAttributes extends HTMLAttributes {
      brandImage?: string;
      brandLink?: string;
      brandName?: string;
      items?: any[];
      title?: string;
    }
  }
}


import {
  SpStorybook as SpStorybook
} from './components/sp-storybook/sp-storybook';

declare global {
  interface HTMLSpStorybookElement extends SpStorybook, HTMLStencilElement {
  }
  var HTMLSpStorybookElement: {
    prototype: HTMLSpStorybookElement;
    new (): HTMLSpStorybookElement;
  };
  interface HTMLElementTagNameMap {
    "sp-storybook": HTMLSpStorybookElement;
  }
  interface ElementTagNameMap {
    "sp-storybook": HTMLSpStorybookElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "sp-storybook": JSXElements.SpStorybookAttributes;
    }
  }
  namespace JSXElements {
    export interface SpStorybookAttributes extends HTMLAttributes {
      
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
